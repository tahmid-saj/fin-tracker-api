# queries
type Query {
  # user sign in
  bankingAccountsByUser(userId: String!, email: String!): [UserBankingAccount]
  bankingSummaryByUser(userId: String!, email: String!): UserBankingSummary
}

# mutations
type Mutation {
  # banking operations
  createUserBankingAccount(userId: String!, email: String!, bankingAccountName: String!): Boolean
  updateUserBankingAccountTransaction(userId: String!, email: String!, transactionInfo: TransactionInfo!): Boolean
  deleteUserBankingAccount(userId: String!, email: String!, bankingAccountName: String!): Boolean
  updateUserBankingAccounts(userId: String!, email: String!, bankingAccounts: [BankingAccount]!): Boolean
}

# inputs
input TransactionInfo {
  bankingAccountName: String!
  amount: Float!
  type: String!
  reason: String
  transferTo: String
  addToExpenses: Boolean
}

input BankingAccount {
  name: String!
  currentBalance: Float!
  totalIn: Float!
  totalOut: Float!
  transactions: [TransactionInfo]
}

# types
type UserBankingAccount {
  userId: String!
  email: String!
  name: String!
  currentBalance: Float!
  totalIn: Float!
  totalOut: Float!
  transactions: [Transaction]
}

type UserBankingSummary {
  userId: String!
  email: String!
  currentAllBankingBalance: Float!
  totalAllBankingIn: Float!
  totalAllBankingOut: Float!
}


type Transaction {
  amount: Float!
  type: String!
  reason: String
  addToExpenses: Boolean
}

