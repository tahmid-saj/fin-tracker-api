# queries
type Query {
  # user sign in
  expensesByUser(userId: String!, email: String!): [UserExpenses]
  expensesSummaryByUser(userId: String!, email: String!): UserExpensesSummary
}

# mutations
type Mutation {
  # expenses operations
  createUserExpenses(userId: String!, email: String!, expenseInfo: ExpenseInfo!): Boolean
}

# inputs
input ExpenseInfo {
  expenseFor: String!
  expenseCost: Float!
  expenseDate: String!
  expenseCategory: String!
  expenseId: Int!
}

# types
type UserExpenses {
  userId: String!
  email: String!
  expenseFor: String!
  expenseCost: Float!
  expenseDate: String!
  expenseCategory: String!
  expenseId: Int!
}

type UserExpensesSummary {
  userId: String!
  email: String!
  currentAllExpensesCost: Float!
}